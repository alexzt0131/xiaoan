# -*- coding: utf-8 -*-
# Generated by Django 1.10.6 on 2017-12-01 17:58
from __future__ import unicode_literals

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0008_alter_user_username_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=30, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('desc', models.TextField()),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
                'verbose_name_plural': 'users',
                'verbose_name': 'user',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Info',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=150, null=True, verbose_name='姓名')),
                ('sex', models.CharField(blank=True, max_length=150, null=True, verbose_name='性别')),
                ('age', models.CharField(blank=True, max_length=150, null=True, verbose_name='年龄')),
                ('ethnic', models.CharField(blank=True, max_length=150, null=True, verbose_name='民族')),
                ('political_role', models.CharField(blank=True, max_length=150, null=True, verbose_name='政治面貌')),
                ('native_place', models.CharField(blank=True, max_length=150, null=True, verbose_name='籍贯')),
                ('health', models.CharField(blank=True, max_length=150, null=True, verbose_name='身体状况')),
                ('PID', models.CharField(blank=True, max_length=150, null=True, verbose_name='身份证号')),
                ('marital_status', models.CharField(blank=True, max_length=150, null=True, verbose_name='婚姻状况')),
                ('graduate_institutions', models.CharField(blank=True, max_length=150, null=True, verbose_name='毕业院校')),
                ('education_background', models.CharField(blank=True, max_length=150, null=True, verbose_name='学历')),
                ('major', models.CharField(blank=True, max_length=150, null=True, verbose_name='专业')),
                ('timeofwork', models.CharField(blank=True, max_length=150, null=True, verbose_name='参加工作时间')),
                ('wished_salary', models.CharField(blank=True, max_length=150, null=True, verbose_name='希望薪金/月')),
                ('contact', models.CharField(blank=True, max_length=150, null=True, verbose_name='联系方式')),
                ('addr', models.CharField(blank=True, max_length=150, null=True, verbose_name='家庭住址')),
                ('uuid', models.UUIDField(default=uuid.uuid4, verbose_name='uuid')),
                ('create_date', models.CharField(default='2017-12-01 17:58:33', max_length=40, verbose_name='创建时间')),
            ],
        ),
    ]
